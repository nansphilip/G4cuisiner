// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id            String  @id @unique @default(uuid())
    name          String
    email         String  @unique
    emailVerified Boolean
    image         String?

    Session Session[]
    Account Account[]
    Recipe  Recipe[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("user")
}

model Session {
    id        String   @id @unique @default(uuid())
    expiresAt DateTime
    ipAddress String?
    userAgent String?

    userId String
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("session")
}

model Account {
    id         String @id @unique @default(uuid())
    accountId  String
    providerId String

    userId String
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

    accessToken  String?
    refreshToken String?
    idToken      String?
    expiresAt    DateTime?
    password     String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("account")
}

model Recipe {
    id          String  @id @unique @default(uuid())
    title       String  @unique
    slug        String  @unique
    description String
    image       String?

    ingredientIdList Ingredient[] @relation(name: "IngredientToRecipe")

    userId String
    user   User   @relation(fields: [userId], references: [id])

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("recipe")
}

model Ingredient {
    id          String  @id @unique @default(uuid())
    name        String  @unique
    description String
    image       String?

    recipeIdList Recipe[] @relation(name: "IngredientToRecipe")

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("ingredient")
}

// Example
model Fruit {
    id          String  @id @unique @default(uuid())
    name        String  @unique
    description String
    image       String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("fruit")
}
